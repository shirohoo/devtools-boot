plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

jar {
    archivesBaseName = 'devtools'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    querydslDir = "$buildDir/generated/querydsl"
}

dependencies {
    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )

    implementation(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-webflux',
            'org.springframework.boot:spring-boot-starter-security',
            'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0',
            'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4',
            'com.querydsl:querydsl-jpa',
            'com.googlecode.json-simple:json-simple:1.1.1',
            'org.apache.commons:commons-lang3:3.12.0',
            'org.apache.opennlp:opennlp-tools:1.9.3',
    )

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }

    compileOnly(
            'org.projectlombok:lombok'
    )

    runtimeOnly(
            'com.h2database:h2',
            'mysql:mysql-connector-java'
    )
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    systemProperty 'jasypt.encryptor.password', System.getenv('DEVTOOLS_PASSWORD')
}

bootRun {
    systemProperty 'jasypt.encryptor.password', System.getenv('DEVTOOLS_PASSWORD')
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
